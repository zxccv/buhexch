
&ИзменениеИКонтроль("ПодготовитьТаблицыСписанныеТоварыИВыпущеннаяПродукция")
Функция ОбменERP_ПодготовитьТаблицыСписанныеТоварыИВыпущеннаяПродукция(ТаблицаТовары, ТаблицаРеквизиты, Отказ)
	
#Вставка     
	Для Каждого стрРеквизит Из ТаблицаРеквизиты Цикл
		стрРеквизит.Подразделение = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();	
	КонецЦикла;
#КонецВставки	
	МатериалыДляОценкиСтоимости = Новый Структура("СписанныеТовары", ТаблицаТовары);

	МатериалыСОценкойСтоимости = ПодготовитьТаблицыСписанныеТовары(
	МатериалыДляОценкиСтоимости,
	ТаблицаРеквизиты,
	Отказ);

	Если МатериалыСОценкойСтоимости.Свойство("ВыпущеннаяПродукция") Тогда
		ВыпущеннаяПродукция = МатериалыСОценкойСтоимости.ВыпущеннаяПродукция;
	Иначе
		ВыпущеннаяПродукция = УчетПроизводства.НовыйТаблицаВыпущеннойПродукции();
	КонецЕсли;

	ТаблицыСписанныеТоварыИВыпущеннаяПродукция = Новый Структура;
	ТаблицыСписанныеТоварыИВыпущеннаяПродукция.Вставить("СписанныеТовары", МатериалыСОценкойСтоимости.СписанныеТовары);
	ТаблицыСписанныеТоварыИВыпущеннаяПродукция.Вставить("ВыпущеннаяПродукция", ВыпущеннаяПродукция);

	Возврат ТаблицыСписанныеТоварыИВыпущеннаяПродукция;

КонецФункции

&ИзменениеИКонтроль("СформироватьДвиженияПоступлениеТоваров")
Процедура ОбменERP_СформироватьДвиженияПоступлениеТоваров(ТаблицаТовары, ТаблицаРеквизиты, Движения, Отказ)

	Если Не ЗначениеЗаполнено(ТаблицаТовары) Тогда
		Возврат;
	КонецЕсли;

	Параметры = ПодготовитьПараметрыПоступлениеТоваров(ТаблицаТовары, ТаблицаРеквизиты);
	Реквизиты = Параметры.Реквизиты[0];
#Вставка     
	Реквизиты.Подразделение = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
#КонецВставки	
	
	СпособОценкиМПЗ = УчетнаяПолитика.СпособОценкиМПЗ(Реквизиты.Организация, Реквизиты.Период);
	ВедетсяУчетПоПартиям = СпособОценкиМПЗ <> Перечисления.СпособыОценки.ПоСредней;
	ПоддержкаПБУ18 = УчетнаяПолитика.ПоддержкаПБУ18(Реквизиты.Организация, Реквизиты.Период);
	ОтражатьВНалоговомУчете = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);

	Для каждого СтрокаТаблицы Из Параметры.ТаблицаТовары Цикл

		Проводка = Движения.Хозрасчетный.Добавить();

		Проводка.Период      = Реквизиты.Период;
		Проводка.Организация = Реквизиты.Организация;
		Проводка.Содержание  = СокрЛП(СтрокаТаблицы.Содержание);

		Проводка.СчетДт = ?(СтрокаТаблицы.Малоценка, ПланыСчетов.Хозрасчетный.ПриобретениеМалоценногоОборудованияИЗапасов, СтрокаТаблицы.СчетУчета);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Номенклатура", СтрокаТаблицы.Номенклатура);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Склады", Реквизиты.Склад);
		Если ВедетсяУчетПоПартиям Тогда
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Партии", Реквизиты.Регистратор);
		КонецЕсли;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "СтавкиНДС", СтрокаТаблицы.СтавкаНДСВРознице);

		СвойстваСчетаДт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетДт);

		Если СвойстваСчетаДт.Забалансовый Тогда
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Контрагенты", Реквизиты.Контрагент);
		КонецЕсли;

		Если СвойстваСчетаДт.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеДт = Реквизиты.Подразделение;
		КонецЕсли;

		Если СвойстваСчетаДт.Количественный Тогда
			Проводка.КоличествоДт = СтрокаТаблицы.Количество;
		КонецЕсли;

		Проводка.СчетКт = СтрокаТаблицы.КорСчет;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, СтрокаТаблицы.ВидКорСубконто1, СтрокаТаблицы.КорСубконто1);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, СтрокаТаблицы.ВидКорСубконто2, СтрокаТаблицы.КорСубконто2);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, СтрокаТаблицы.ВидКорСубконто3, СтрокаТаблицы.КорСубконто3);

		СвойстваСчетаКт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетКт);

		Если СвойстваСчетаКт.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеКт = Реквизиты.Подразделение;
		КонецЕсли;

		Если СвойстваСчетаКт.Валютный Тогда
			Проводка.ВалютаКт        = Реквизиты.ВалютаВзаиморасчетов;
			Проводка.ВалютнаяСуммаКт = СтрокаТаблицы.СуммаВзаиморасчетов;
		КонецЕсли;

		Проводка.Сумма = СтрокаТаблицы.СуммаБУ;

		Если ОтражатьВНалоговомУчете Тогда

			Если СвойстваСчетаДт.НалоговыйУчет Тогда
				Проводка.СуммаНУДт = СтрокаТаблицы.СуммаНУ;
				Если ПоддержкаПБУ18 Тогда
					Проводка.СуммаПРДт = СтрокаТаблицы.СуммаБУ - СтрокаТаблицы.СуммаНУ;
					Проводка.СуммаВРДт = 0;
				КонецЕсли;
			КонецЕсли;

			Если СвойстваСчетаКт.НалоговыйУчет Тогда
				Проводка.СуммаНУКт = СтрокаТаблицы.СуммаНУ;
				Если ПоддержкаПБУ18 Тогда
					Проводка.СуммаПРКт = СтрокаТаблицы.СуммаБУ - СтрокаТаблицы.СуммаНУ;
					Проводка.СуммаВРКт = 0;
				КонецЕсли;
			КонецЕсли;

		КонецЕсли;

		Если СтрокаТаблицы.Малоценка Тогда

			Проводка = Движения.Хозрасчетный.Добавить();

			Проводка.Период      = Реквизиты.Период;
			Проводка.Организация = Реквизиты.Организация;
			Проводка.Содержание  = СтрокаТаблицы.Содержание;

			Проводка.СчетДт = СтрокаТаблицы.СчетЗатрат;

			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, СтрокаТаблицы.Субконто1);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 2, СтрокаТаблицы.Субконто2);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 3, СтрокаТаблицы.Субконто3);

			СвойстваСчетаДт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетДт);

			Если СвойстваСчетаДт.УчетПоПодразделениям Тогда
				Проводка.ПодразделениеДт = СтрокаТаблицы.ПодразделениеЗатрат;
			КонецЕсли;

			Проводка.СчетКт = ПланыСчетов.Хозрасчетный.ВыбытиеМалоценногоОборудованияИЗапасов;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Номенклатура", СтрокаТаблицы.Номенклатура);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Склады", Реквизиты.Склад);
			Если ВедетсяУчетПоПартиям Тогда
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Партии", Реквизиты.Регистратор);
			КонецЕсли;

			СвойстваСчетаКт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетКт);

			Если СвойстваСчетаКт.УчетПоПодразделениям Тогда
				Проводка.ПодразделениеКт = Реквизиты.Подразделение;
			КонецЕсли;

			Если СвойстваСчетаКт.Валютный Тогда
				Проводка.ВалютаКт        = Реквизиты.ВалютаВзаиморасчетов;
				Проводка.ВалютнаяСуммаКт = СтрокаТаблицы.СуммаВзаиморасчетов;
			КонецЕсли;

			Проводка.Сумма = СтрокаТаблицы.СуммаБУ;

			Если ОтражатьВНалоговомУчете Тогда

				СуммаНУ = 0;
				Если СвойстваСчетаДт.НалоговыйУчет Тогда
					Проводка.СуммаНУДт = СуммаНУ;
					Если ПоддержкаПБУ18 Тогда
						Проводка.СуммаПРДт = СтрокаТаблицы.СуммаБУ - СтрокаТаблицы.СуммаНУ;
						Проводка.СуммаВРДт = Проводка.Сумма - Проводка.СуммаНУДт - Проводка.СуммаПРДт;
					КонецЕсли;
				КонецЕсли;

				Если СвойстваСчетаКт.НалоговыйУчет Тогда
					Проводка.СуммаНУКт = СуммаНУ;
					Если ПоддержкаПБУ18 Тогда
						Проводка.СуммаПРКт = СтрокаТаблицы.СуммаБУ - СтрокаТаблицы.СуммаНУ;
						Проводка.СуммаВРКт = Проводка.Сумма - Проводка.СуммаНУКт - Проводка.СуммаПРКт;
					КонецЕсли;
				КонецЕсли;

			КонецЕсли;

		КонецЕсли;
	КонецЦикла;

	Движения.Хозрасчетный.Записывать = Истина;

КонецПроцедуры
